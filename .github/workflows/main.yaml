name:  Build and deploy

on: [push, pull_request]

jobs:
  build:
    runs-on: [macos-latest]
    env:
        ENCRYPTED_CERTS_FILE_PATH: ${{ './certs.p12.gpg' }}
        DECRYPTED_CERTS_FILE_PATH: ${{ './certs.p12' }}
        ENCRYPTED_PROVISION_FILE_PATH: ${{ './provisioning.tar.gz.gpg' }}
        DECRYPTED_PROVISION_FILE_PATH: ${{ './provisioning.tar.gz' }}
        CERTS_ENCRYPTION_PWD: ${{ secrets.CERTS_ENCRYPTION_PWD }}
        PROVISION_ENCRYPTION_PWD: ${{ secrets.PROVISION_ENCRYPTION_PWD }}
        CERTS_EXPORT_PWD: ${{ secrets.CERTS_EXPORT_PWD }}
        KEYCHAIN: ${{ 'test.keychain' }}
    steps:
      - name: Configure Keychain
        run: |
          security create-keychain -p "" "$KEYCHAIN"
          security list-keychains -s "$KEYCHAIN"
          security default-keychain -s "$KEYCHAIN"
          security unlock-keychain -p "" "$KEYCHAIN"
          security set-keychain-settings
          security list-keychains
      - uses: actions/checkout@v2
      - name: Configure Code Signing
        run: |
          gpg -d -o "$DECRYPTED_CERTS_FILE_PATH" --pinentry-mode=loopback --passphrase "$CERTS_ENCRYPTION_PWD" "$ENCRYPTED_CERTS_FILE_PATH"
          gpg -d -o "$DECRYPTED_PROVISION_FILE_PATH" --pinentry-mode=loopback --passphrase "$PROVISION_ENCRYPTION_PWD" "$ENCRYPTED_PROVISION_FILE_PATH"
          security import "$DECRYPTED_CERTS_FILE_PATH" -k "$KEYCHAIN" -P "$CERTS_EXPORT_PWD" -A
          security set-key-partition-list -S apple-tool:,apple: -s -k "" "$KEYCHAIN"
          tar xzvf $DECRYPTED_PROVISION_FILE_PATH
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp ./82879f88-5790-44a6-a2ea-cdb51db073af.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/82879f88-5790-44a6-a2ea-cdb51db073af.mobileprovision
          cd ~/Library/MobileDevice/Provisioning\ Profiles/
          ls
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable' # or: 'dev' or 'beta'
      - run: flutter packages get
      - run: flutter build ios --release --no-codesign
      - name: Create ipa
        run: |
          cd ios
          xcodebuild -workspace Runner.xcworkspace -scheme Runner -sdk iphoneos -configuration Release archive -archivePath $PWD/build/Runner.xcarchive
          xcodebuild -exportArchive -archivePath $PWD/build/Runner.xcarchive -exportOptionsPlist exportOptions.plist -exportPath $PWD/build/Runner.ipa
          cd ..
          cp ios/build/Runner.ipa/Runner.ipa buildOutput/
